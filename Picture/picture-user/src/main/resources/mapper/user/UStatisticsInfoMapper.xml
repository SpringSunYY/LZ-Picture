<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.user.mapper.UStatisticsInfoMapper">

    <resultMap type="UStatisticsInfo" id="UStatisticsInfoResult">
        <result property="statisticsId" column="statistics_id"/>
        <result property="type" column="type"/>
        <result property="statisticsName" column="statistics_name"/>
        <result property="commonKey" column="common_key"/>
        <result property="statisticsKey" column="statistics_key"/>
        <result property="stages" column="stages"/>
        <result property="content" column="content"/>
        <result property="extendContent" column="extend_content"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectUStatisticsInfoVo">
        select statistics_id,
               type,
               statistics_name,
               common_key,
               statistics_key,
               stages,
               content,
               extend_content,
               remark,
               create_time
        from u_u_statistics_info
    </sql>

    <select id="selectUStatisticsInfoList" parameterType="UStatisticsInfo" resultMap="UStatisticsInfoResult">
        <include refid="selectUStatisticsInfoVo"/>
        <where>
            <if test="statisticsId != null  and statisticsId != ''">and statistics_id = #{statisticsId}</if>
            <if test="type != null  and type != ''">and type = #{type}</if>
            <if test="statisticsName != null  and statisticsName != ''">and statistics_name like concat('%',
                #{statisticsName}, '%')
            </if>
            <if test="commonKey != null  and commonKey != ''">and common_key like concat('%', #{commonKey}, '%')</if>
            <if test="statisticsKey != null  and statisticsKey != ''">and statistics_key like concat('%',
                #{statisticsKey}, '%')
            </if>
            <if test="stages != null ">and stages = #{stages}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
        </where>
        <choose>
            <when test="params.sortSql != null and params.sortSql != ''">
                ${params.sortSql}
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>
    </select>

    <select id="selectUStatisticsInfoByStatisticsId" parameterType="String" resultMap="UStatisticsInfoResult">
        <include refid="selectUStatisticsInfoVo"/>
        where statistics_id = #{statisticsId}
    </select>

    <insert id="insertUStatisticsInfo" parameterType="UStatisticsInfo">
        insert into u_u_statistics_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="statisticsId != null">statistics_id,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="statisticsName != null and statisticsName != ''">statistics_name,</if>
            <if test="commonKey != null and commonKey != ''">common_key,</if>
            <if test="statisticsKey != null and statisticsKey != ''">statistics_key,</if>
            <if test="stages != null">stages,</if>
            <if test="content != null">content,</if>
            <if test="extendContent != null">extend_content,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="statisticsId != null">#{statisticsId},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="statisticsName != null and statisticsName != ''">#{statisticsName},</if>
            <if test="commonKey != null and commonKey != ''">#{commonKey},</if>
            <if test="statisticsKey != null and statisticsKey != ''">#{statisticsKey},</if>
            <if test="stages != null">#{stages},</if>
            <if test="content != null">#{content},</if>
            <if test="extendContent != null">#{extendContent},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <update id="updateUStatisticsInfo" parameterType="UStatisticsInfo">
        update u_u_statistics_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="statisticsName != null and statisticsName != ''">statistics_name = #{statisticsName},</if>
            <if test="commonKey != null and commonKey != ''">common_key = #{commonKey},</if>
            <if test="statisticsKey != null and statisticsKey != ''">statistics_key = #{statisticsKey},</if>
            <if test="stages != null">stages = #{stages},</if>
            <if test="content != null">content = #{content},</if>
            <if test="extendContent != null">extend_content = #{extendContent},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where statistics_id = #{statisticsId}
    </update>

    <delete id="deleteUStatisticsInfoByStatisticsId" parameterType="String">
        delete
        from u_u_statistics_info
        where statistics_id = #{statisticsId}
    </delete>

    <delete id="deleteUStatisticsInfoByStatisticsIds" parameterType="String">
        delete from u_u_statistics_info where statistics_id in
        <foreach item="statisticsId" collection="array" open="(" separator="," close=")">
            #{statisticsId}
        </foreach>
    </delete>

    <select id="userRegisterStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        WITH RECURSIVE date_range AS (SELECT DATE (#{startDate}) AS target_date
        UNION ALL
        SELECT DATE_ADD(target_date, INTERVAL 1 DAY)
        FROM date_range
        WHERE target_date &lt; DATE (#{endDate})
        )
        SELECT d.target_date as name,
        COALESCE(COUNT(u.user_id), 0) AS total
        FROM date_range d
        LEFT JOIN u_user_info u
        ON DATE (u.create_time) = d.target_date
        <if test="isDelete != null and isDelete != ''">
            AND u.is_delete = #{isDelete}
        </if>
        GROUP BY d.target_date
        ORDER BY d.target_date;
    </select>
    <select id="userLoginStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        WITH RECURSIVE date_range AS (SELECT DATE (#{startDate}) AS target_date
        UNION ALL
        SELECT DATE_ADD(target_date, INTERVAL 1 DAY)
        FROM date_range
        WHERE target_date &lt; DATE (#{endDate})
        )
        SELECT d.target_date as name,
        COALESCE(COUNT(u.user_id), 0) AS total
        FROM date_range d
        LEFT JOIN u_login_log_info u
        ON DATE (u.login_time) = d.target_date
        <if test="userId != null  and userId != ''">and user_id = #{userId}</if>
        <if test="userName != null  and userName != ''">and user_name like concat('%', #{userName}, '%')</if>
        <if test="loginType != null  and loginType != ''">and login_type = #{loginType}</if>
        <if test="loginLocation != null  and loginLocation != ''">and login_location like concat('%',
            #{loginLocation}, '%')
        </if>
        <if test="browser != null  and browser != ''">and browser like concat('%', #{browser}, '%')</if>
        <if test="os != null  and os != ''">and os like concat('%', #{os}, '%')</if>
        <if test="platform != null  and platform != ''">and platform like concat('%', #{platform}, '%')</if>
        <if test="status != null  and status != ''">and status = #{status}</if>
        GROUP BY d.target_date
        ORDER BY d.target_date;
    </select>
    <select id="userSexStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        SELECT
        COALESCE(u.sex, '0') AS name,
        COUNT(*) AS total
        FROM u_user_info u
        <if test="isDelete != null and isDelete != ''">
            WHERE u.is_delete = #{isDelete}
        </if>
        GROUP BY COALESCE(u.sex, '0')
        ORDER BY name;
    </select>
    <select id="userInformTypeStatistics" resultType="com.lz.user.model.dto.statistics.UserInformTypeStatisticsRo">
        WITH RECURSIVE date_range AS (
        SELECT #{startDate} AS stat_date
        UNION ALL
        SELECT DATE_ADD(stat_date, INTERVAL 1 DAY)
        FROM date_range
        WHERE stat_date &lt; #{endDate}
        )
        SELECT
        d.stat_date AS sendTime,
        t.template_key AS templateKey,
        t.locale AS locale,
        t.template_type AS templateType,
        COALESCE(SUM(i.count_per_day), 0) AS total
        FROM date_range d
        CROSS JOIN (
        SELECT DISTINCT template_key, locale, template_type
        FROM u_inform_info
        ) t
        LEFT JOIN (
        SELECT
        template_key,
        locale,
        template_type,
        send_time,
        COUNT(*) AS count_per_day
        FROM u_inform_info
        WHERE send_time >= CONCAT(#{startDate}, ' 00:00:00')
        AND send_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)
        <if test="isDelete != null and isDelete != ''">
            AND is_delete = #{isDelete}
        </if>
        GROUP BY template_key, locale, template_type, send_time
        ) i
        ON i.template_key = t.template_key
        AND i.locale = t.locale
        AND i.template_type = t.template_type
        AND i.send_time >= d.stat_date
        AND i.send_time &lt; d.stat_date + INTERVAL 1 DAY
        GROUP BY d.stat_date, t.template_key, t.locale, t.template_type
        ORDER BY d.stat_date ASC, t.template_key, t.locale, t.template_type;
    </select>

</mapper>
