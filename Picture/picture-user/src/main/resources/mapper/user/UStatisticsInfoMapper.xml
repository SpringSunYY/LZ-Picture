<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.user.mapper.UStatisticsInfoMapper">

    <resultMap type="UStatisticsInfo" id="UStatisticsInfoResult">
        <result property="statisticsId" column="statistics_id"/>
        <result property="type" column="type"/>
        <result property="statisticsName" column="statistics_name"/>
        <result property="commonKey" column="common_key"/>
        <result property="statisticsKey" column="statistics_key"/>
        <result property="stages" column="stages"/>
        <result property="content" column="content"/>
        <result property="extendContent" column="extend_content"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectUStatisticsInfoVo">
        select statistics_id,
               type,
               statistics_name,
               common_key,
               statistics_key,
               stages,
               content,
               extend_content,
               remark,
               create_time
        from u_u_statistics_info
    </sql>

    <select id="selectUStatisticsInfoList" parameterType="UStatisticsInfo" resultMap="UStatisticsInfoResult">
        <include refid="selectUStatisticsInfoVo"/>
        <where>
            <if test="statisticsId != null  and statisticsId != ''">and statistics_id = #{statisticsId}</if>
            <if test="type != null  and type != ''">and type = #{type}</if>
            <if test="statisticsName != null  and statisticsName != ''">and statistics_name like concat('%',
                #{statisticsName}, '%')
            </if>
            <if test="commonKey != null  and commonKey != ''">and common_key like concat('%', #{commonKey}, '%')</if>
            <if test="statisticsKey != null  and statisticsKey != ''">and statistics_key like concat('%',
                #{statisticsKey}, '%')
            </if>
            <if test="stages != null ">and stages = #{stages}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
        </where>
        <choose>
            <when test="params.sortSql != null and params.sortSql != ''">
                ${params.sortSql}
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>
    </select>

    <select id="selectUStatisticsInfoByStatisticsId" parameterType="String" resultMap="UStatisticsInfoResult">
        <include refid="selectUStatisticsInfoVo"/>
        where statistics_id = #{statisticsId}
    </select>

    <insert id="insertUStatisticsInfo" parameterType="UStatisticsInfo">
        insert into u_u_statistics_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="statisticsId != null">statistics_id,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="statisticsName != null and statisticsName != ''">statistics_name,</if>
            <if test="commonKey != null and commonKey != ''">common_key,</if>
            <if test="statisticsKey != null and statisticsKey != ''">statistics_key,</if>
            <if test="stages != null">stages,</if>
            <if test="content != null">content,</if>
            <if test="extendContent != null">extend_content,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="statisticsId != null">#{statisticsId},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="statisticsName != null and statisticsName != ''">#{statisticsName},</if>
            <if test="commonKey != null and commonKey != ''">#{commonKey},</if>
            <if test="statisticsKey != null and statisticsKey != ''">#{statisticsKey},</if>
            <if test="stages != null">#{stages},</if>
            <if test="content != null">#{content},</if>
            <if test="extendContent != null">#{extendContent},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <update id="updateUStatisticsInfo" parameterType="UStatisticsInfo">
        update u_u_statistics_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="statisticsName != null and statisticsName != ''">statistics_name = #{statisticsName},</if>
            <if test="commonKey != null and commonKey != ''">common_key = #{commonKey},</if>
            <if test="statisticsKey != null and statisticsKey != ''">statistics_key = #{statisticsKey},</if>
            <if test="stages != null">stages = #{stages},</if>
            <if test="content != null">content = #{content},</if>
            <if test="extendContent != null">extend_content = #{extendContent},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where statistics_id = #{statisticsId}
    </update>

    <delete id="deleteUStatisticsInfoByStatisticsId" parameterType="String">
        delete
        from u_u_statistics_info
        where statistics_id = #{statisticsId}
    </delete>

    <delete id="deleteUStatisticsInfoByStatisticsIds" parameterType="String">
        delete from u_u_statistics_info where statistics_id in
        <foreach item="statisticsId" collection="array" open="(" separator="," close=")">
            #{statisticsId}
        </foreach>
    </delete>

    <select id="userRegisterStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        WITH RECURSIVE date_range AS (
        SELECT DATE(#{startDate}) AS target_date
        UNION ALL
        SELECT DATE_ADD(target_date, INTERVAL 1 DAY)
        FROM date_range
        WHERE target_date &lt; DATE(#{endDate})
        )
        SELECT d.target_date AS name,
        COALESCE(u.total, 0) AS total
        FROM date_range d
        LEFT JOIN (
        SELECT DATE(create_time) AS stat_date,
        COUNT(user_id) AS total
        FROM u_user_info
        WHERE create_time >= #{startDate}
        AND create_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)
        <if test="isDelete != null and isDelete != ''">
            AND is_delete = #{isDelete}
        </if>
        GROUP BY DATE(create_time)
        ) u
        ON d.target_date = u.stat_date
        ORDER BY d.target_date
    </select>

    <select id="userLoginStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        WITH RECURSIVE date_range AS (
        SELECT DATE(#{startDate}) AS target_date
        UNION ALL
        SELECT DATE_ADD(target_date, INTERVAL 1 DAY)
        FROM date_range
        WHERE target_date &lt; DATE(#{endDate})
        )
        SELECT d.target_date AS name,
        COALESCE(t.total, 0) AS total
        FROM date_range d
        LEFT JOIN (
        SELECT DATE(login_time) AS stat_date,
        COUNT(user_id) AS total
        FROM u_login_log_info
        WHERE login_time >= #{startDate}
        AND login_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)
        <if test="userId != null and userId != ''">
            AND user_id = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND user_name LIKE concat('%', #{userName}, '%')
        </if>
        <if test="loginType != null and loginType != ''">
            AND login_type = #{loginType}
        </if>
        <if test="loginLocation != null and loginLocation != ''">
            AND login_location LIKE concat('%', #{loginLocation}, '%')
        </if>
        <if test="browser != null and browser != ''">
            AND browser LIKE concat('%', #{browser}, '%')
        </if>
        <if test="os != null and os != ''">
            AND os LIKE concat('%', #{os}, '%')
        </if>
        <if test="platform != null and platform != ''">
            AND platform = #{platform}
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        GROUP BY DATE(login_time)) t
        ON d.target_date = t.stat_date
        ORDER BY d.target_date
    </select>

    <select id="userSexStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        SELECT
        COALESCE(u.sex, '0') AS name,
        COUNT(*) AS total
        FROM u_user_info u
        <if test="isDelete != null and isDelete != ''">
            WHERE u.is_delete = #{isDelete}
        </if>
        GROUP BY COALESCE(u.sex, '0')
        ORDER BY name;
    </select>
    <select id="userInformTypeStatistics" resultType="com.lz.user.model.dto.statistics.UserInformTypeStatisticsRo">
        SELECT DATE(send_time) AS sendTime,
        template_key AS templateKey,
        locale AS locale,
        template_type AS templateType,
        COUNT(*) AS total
        FROM u_inform_info
        WHERE send_time >= #{startDate}
        AND send_time &lt; DATE_ADD(#{endDate} , INTERVAL 1 DAY)
        <if test="isDelete != null and isDelete != ''">
            AND is_delete = #{isDelete}
        </if>
        GROUP BY sendTime, templateKey, locale, templateType
        ORDER BY sendTime, templateKey, locale, templateType;
    </select>
    <select id="userLocationStatistics" resultType="com.lz.common.core.domain.statistics.ro.MapStatisticsRo">
        select ip_address as location, count(*) as total
        from u_user_info
        <where>
            <if test="location != null and location != ''">
                and ip_address like concat('%', #{location}, '%')
            </if>
            <if test="isDelete != null and isDelete != ''">and is_delete = #{isDelete}</if>
            <if test="startDate != null and startDate != ''">and create_time >= #{startDate}</if>
            <if test="endDate != null and endDate != ''">and create_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
        </where>
        group by location;
    </select>

</mapper>
