<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.points.mapper.PoStatisticsInfoMapper">

    <resultMap type="PoStatisticsInfo" id="PoStatisticsInfoResult">
        <result property="statisticsId" column="statistics_id"/>
        <result property="type" column="type"/>
        <result property="statisticsName" column="statistics_name"/>
        <result property="commonKey" column="common_key"/>
        <result property="statisticsKey" column="statistics_key"/>
        <result property="stages" column="stages"/>
        <result property="content" column="content"/>
        <result property="extendContent" column="extend_content"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectPoStatisticsInfoVo">
        select statistics_id,
               type,
               statistics_name,
               common_key,
               statistics_key,
               stages,
               content,
               extend_content,
               remark,
               create_time
        from po_po_statistics_info
    </sql>

    <select id="selectPoStatisticsInfoList" parameterType="PoStatisticsInfo" resultMap="PoStatisticsInfoResult">
        <include refid="selectPoStatisticsInfoVo"/>
        <where>
            <if test="statisticsId != null  and statisticsId != ''">and statistics_id = #{statisticsId}</if>
            <if test="type != null  and type != ''">and type = #{type}</if>
            <if test="statisticsName != null  and statisticsName != ''">and statistics_name like concat('%',
                #{statisticsName}, '%')
            </if>
            <if test="commonKey != null  and commonKey != ''">and common_key = #{commonKey}</if>
            <if test="statisticsKey != null  and statisticsKey != ''">and statistics_key = #{statisticsKey}</if>
            <if test="stages != null ">and stages = #{stages}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and DATE_FORMAT(create_time, '%Y-%m-%d') between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
        </where>
        <choose>
            <when test="params.sortSql != null and params.sortSql != ''">
                ${params.sortSql}
            </when>
            <otherwise>
                order by create_time desc
            </otherwise>
        </choose>
    </select>

    <select id="selectPoStatisticsInfoByStatisticsId" parameterType="String" resultMap="PoStatisticsInfoResult">
        <include refid="selectPoStatisticsInfoVo"/>
        where statistics_id = #{statisticsId}
    </select>

    <insert id="insertPoStatisticsInfo" parameterType="PoStatisticsInfo">
        insert into po_po_statistics_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="statisticsId != null">statistics_id,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="statisticsName != null and statisticsName != ''">statistics_name,</if>
            <if test="commonKey != null and commonKey != ''">common_key,</if>
            <if test="statisticsKey != null and statisticsKey != ''">statistics_key,</if>
            <if test="stages != null">stages,</if>
            <if test="content != null">content,</if>
            <if test="extendContent != null">extend_content,</if>
            <if test="remark != null">remark,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="statisticsId != null">#{statisticsId},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="statisticsName != null and statisticsName != ''">#{statisticsName},</if>
            <if test="commonKey != null and commonKey != ''">#{commonKey},</if>
            <if test="statisticsKey != null and statisticsKey != ''">#{statisticsKey},</if>
            <if test="stages != null">#{stages},</if>
            <if test="content != null">#{content},</if>
            <if test="extendContent != null">#{extendContent},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <update id="updatePoStatisticsInfo" parameterType="PoStatisticsInfo">
        update po_po_statistics_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="statisticsName != null and statisticsName != ''">statistics_name = #{statisticsName},</if>
            <if test="commonKey != null and commonKey != ''">common_key = #{commonKey},</if>
            <if test="statisticsKey != null and statisticsKey != ''">statistics_key = #{statisticsKey},</if>
            <if test="stages != null">stages = #{stages},</if>
            <if test="content != null">content = #{content},</if>
            <if test="extendContent != null">extend_content = #{extendContent},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where statistics_id = #{statisticsId}
    </update>

    <delete id="deletePoStatisticsInfoByStatisticsId" parameterType="String">
        delete
        from po_po_statistics_info
        where statistics_id = #{statisticsId}
    </delete>

    <delete id="deletePoStatisticsInfoByStatisticsIds" parameterType="String">
        delete from po_po_statistics_info where statistics_id in
        <foreach item="statisticsId" collection="array" open="(" separator="," close=")">
            #{statisticsId}
        </foreach>
    </delete>

    <select id="pointsUsageTypeStatistics"
            resultType="com.lz.points.model.dto.statistics.PointsUsageLogStatisticsRo">
        select count(*) as value, DATE(create_time) as date, usage_type as usageType
        from po_points_usage_log_info
        <where>
            <if test="logType != null and logType != ''">and log_type = #{logType}</if>
            <if test="startDate != null and startDate != ''">and create_time >= #{startDate}</if>
            <if test="endDate != null and endDate != ''">and create_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
        </where>
        group by date, usageType;
    </select>
    <select id="pointsOrderRankStatistics" resultType="com.lz.points.model.dto.statistics.PaymentOrderStatisticsRo">
        select sum(buyer_pay_amount) as value, user_id as data
        from po_payment_order_info
        <where>
            <if test="startDate != null and startDate != ''">and payment_time >= #{startDate}</if>
            <if test="endDate != null and endDate != ''">and payment_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
            <if test="orderStatus != null and orderStatus != ''">and order_status = #{orderStatus}</if>
            <if test="isDelete != null and isDelete != ''">and is_delete = #{isDelete}</if>
        </where>
        group by user_id limit #{size};
    </select>
    <select id="pointsUsageStatistics" resultType="com.lz.common.core.domain.statistics.ro.StatisticsRo">
        select sum(points_used) as total, DATE(create_time) as name
        from po_points_usage_log_info
        <where>
            <if test="logType != null and logType != ''">and log_type = #{logType}</if>
            <if test="startDate != null and startDate != ''">and create_time >= #{startDate}</if>
            <if test="endDate != null and endDate != ''">and create_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
        </where>
        group by name;
    </select>
    <select id="pointsRechargePackageRankStatistics"
            resultType="com.lz.points.model.dto.statistics.PointsRechargeStatisticsRo">
        select sum(recharge_count) as value, package_id as data
        from po_points_recharge_info
        <where>
            <if test="startDate != null and startDate != ''">and arrival_time >= #{startDate}</if>
            <if test="endDate != null and endDate != ''">and arrival_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
            <if test="rechargeStatus != null and rechargeStatus != ''">and recharge_status = #{rechargeStatus}</if>
            <if test="isDelete != null and isDelete != ''">and is_delete = #{isDelete}</if>
        </where>
        group by package_id limit #{size};
    </select>
    <select id="pointsPaymentTypeStatistics"
            resultType="com.lz.points.model.dto.statistics.PointsRechargeStatisticsRo">
        select count(*) as value, payment_type as data
        from po_payment_order_info
        <where>
            <if test="startDate != null and startDate != ''">and payment_time >= #{startDate}</if>
            <if test="endDate != null and endDate != ''">and payment_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
            <if test="orderStatus != null and orderStatus != ''">and order_status = #{orderStatus}</if>
            <if test="isDelete != null and isDelete != ''">and is_delete = #{isDelete}</if>
        </where>
        group by data;
    </select>
    <select id="pointsOrderIpAddressStatistics"
            resultType="com.lz.points.model.dto.statistics.PaymentOrderMapStatisticsRo">
        select count(*) as value,sum(receipt_amount) as amount, DATE(payment_time) as date,ip_address as ipAddress
        from po_payment_order_info
        <where>
            <if test="startDate != null and startDate != ''">and payment_time >= #{startDate}</if>
            <if test="ipAddress != null and ipAddress != ''">and ip_address like concat('%',#{ipAddress},'%')</if>
            <if test="endDate != null and endDate != ''">and payment_time &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)</if>
            <if test="orderStatus != null and orderStatus != ''">and order_status = #{orderStatus}</if>
            <if test="isDelete != null and isDelete != ''">and is_delete = #{isDelete}</if>
        </where>
        group by date ,ipAddress;
    </select>
</mapper>
